/*Одним из недостатков C++ является отсутствие для бизнес-программ встроенного типа для денежных значений, такого, как $173 698 001.32. 
Такой денежный тип должен иметь возможность для хранения числа с фиксированной десятичной точкой точностью около 17 знаков, которого 
было бы достаточно для хранения национального долга в долларах и центах. К счастью, встроенный тип C++ long double  имеет точность 19 цифр, 
поэтому мы можем использовать его как базисный для класса money, даже используя плавающую точку. Однако нам нужно будет добавить возмож- 
ность ввода и вывода денежных значений с предшествующим им знаком доллара и разделенными запятыми группы по три числа: так проще читать 
большие числа. Первым делом при разработке такого класса напишем метод mstold(), который принимает денежную строку, то есть строку, пред- 
ставляющую собой некоторое количество денег типа "$1 234 567 890 123.99" 
в качестве аргумента и возвращает эквивалентное ее значению число типа long double. 
Вам нужно будет обработать денежную строку как массив символов и, просматривая ее символ за символом, скопировать из нее только цифры 
(0-9) и десятичную точку в другую строку. Игнорируется все остальное, включая знак доллара и запятые. Затем вы можете использовать биб- 
лиотечную функцию _atold() (заметим, что здесь название функции начинается с символа подчеркивания — заголовочные файлы STDLIB.H или 
MATH.H) для преобразования новой строки к числу типа long double. Предполагаем, что денежное значение не может быть отрицательным. Напи- 
шите функцию main() для проверки метода mstold(), которая несколько раз получает денежную строку от пользователя и выводит соответству- 
ющее число типа long double.*/
#include <iostream>
#include <cstring> 
#include <cctype>   
#include <cstdlib>   
#include <stdexcept> 
using namespace std;
class money {
public:
    long double mstold(const char* moneyStr) const;
};

long double money::mstold(const char* moneyStr) const {
    char temp[50];
    int j = 0;
    for (int i = 0; i < strlen(moneyStr); i++) {
        if (isdigit(moneyStr[i]) || moneyStr[i] == '.') {
            temp[j++] = moneyStr[i];
        }
    }
    temp[j] = '\0'; 
    long double result = strtold(temp, nullptr);
    if (result == 0.0 && temp[0] != '0') {
        throw invalid_argument("Invalid money string");
    }
    return result;
}

int main() {
    setlocale(LC_ALL, "rus");
    money m;
    char input[50];
    cout << "Введите денежное значение (например, $1,234,567,890,123.99): ";
    cin.getline(input, 50);
    try {
        long double value = m.mstold(input);
        cout << "Эквивалентное значение типа long double: " << value << endl;
    }
    catch (const invalid_argument& e) {
        cerr << "Ошибка: " << e.what() << endl;
    }
    return 0;
}
