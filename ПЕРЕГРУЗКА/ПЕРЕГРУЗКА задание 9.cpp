/*Дополните класс safearay из программы ARROVER3 этой главы так, чтобы ользователь мог определять и верхнюю, и нижнюю границы массива 
(например, индексы, начинающиеся с 100 и заканчивающиеся 200). Имеем перегруженную операцию доступа к членам массива, проверяющую 
индексы каждый раз, когда к массиву нужен доступ, для проверки того, что мы не вышли за пределы массива. Вам понадобится конструктор с 
двумя аргументами, который определяет верхнюю и нижнюю границы. Так как мы еще не изучили, как выделять память динамически, то данные 
класса все еще будут размещаться в массиве, состоящем из 100 элементов, но вообще вы можете преобразовывать индексы массива safearay в индек- 
сы реального массива целых чисел произвольным образом. Например, если пользователь определил диапазон от 100 до 175, то вы можете преоб- 
разовать его в диапазон от arr[0] до arr[75]. */
#include <iostream>
#include <process.h> 
using namespace std;
const int LIMIT = 100;
class safearray {
private:
    int arr[LIMIT];   
    int vverh;   
    int niz;  
public:
    safearray(int lower, int upper) {
        if (upper - lower >= LIMIT || lower >= upper) {
            cout << "\nНекорректные границы массива!";
            exit(1);
        }
        vverh = lower;
        niz = upper;
    }
    int& operator[](int n) {
        if (n < vverh || n > niz) {
            cout << "\nОшибочный индекс!";
            exit(1);
        }
        return arr[n - vverh];
    }
    int size() const {
        return niz - vverh + 1;
    }
};

int main() {
    setlocale(LC_ALL, "rus");
    int v, ni;
    cout << "Введите нижнюю границу массива: ";
    cin >> v;
    cout << "Введите верхнюю границу массива: ";
    cin >> ni;
    safearray sa(v, ni);
    for (int i = v; i <= ni; i++) {
        sa[i] = i * 10; 
    }
    for (int i = v; i <= ni; i++) {
        cout << "Элемент " << i << " равен " << sa[i] << endl;
    }
    return 0;
}
