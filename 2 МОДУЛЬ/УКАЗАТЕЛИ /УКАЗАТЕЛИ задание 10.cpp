/*Описанный в упражнении 9 подход нерационален, так как каждый из 
10 массивов объявляется отдельно, с использованием отдельного имени, 
и каждый адрес получают отдельно. Вы можете упростить программу, ис- 
пользуя операцию new, которая позволит вам выделить память для масси- 
вов в цикле и одновременно связать с ними указатели: 
for(j = 0; j < NUMARRAYS; j++)  // создаем NUMARRAYS массивов 
 *(ар + j) = new int[MAXSIZE];  // no MAXSIZE целых чисел в каждом 
Перепишите программу упражнения 9, используя этот подход. Доступ к 
отдельному элементу массивов вы сможете получить, используя то же 
выражение, что и в упражнении 9, или аналогичное выражение с указате- 
лями: *(*(ap + j)+k). */
#include <iostream>
#include <cstdlib>
using namespace std;
int main() {
	setlocale(LC_ALL, "rus");
	int mass = 10;
	int size = 10;
	int** arr = new int*[size];
	for (int i = 0; i < mass; i++) {
		arr[i] = new int[size];
	}
	for (int i = 0; i < mass; i++) {
		for (int j = 0; j < size; j++) {
			*(*(arr + i) + j) = rand() % 100;
			cout << "A[" << i << "][" << j << "]=" << *(*(arr + i) + j) << "  ";
		}
		cout << endl;
	}
	int i1, j1;
	link:
	cout << "Введите номер массива (0-9): "; cin >> i1;
	cout << "Введите номер элемента (0-9): "; cin >> j1;
	if (i1 >= 0 && i1 < 10 && j1 >= 0 && j1 < 10)
		cout << "Ответ: А[" << i1 << "][" << j1 << "]=" << arr[i1][j1] << endl;
	else {
		cout << "Данные введены неверно! Повторите! " << endl; goto link;
	}
	return 0;
}
